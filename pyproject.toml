[build-system]
# Build tools required
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "ml_apprentice_project"
version = "0.1.0"
description = "Sentence Embedding and Multi-Task Learning with Transformers"
authors = [
    { name = "Your Name", email = "your.email@example.com" }
]
readme = "README.md"
license = { file = "LICENSE" }
requires-python = ">=3.8"

# Core dependencies with stricter versioning
dependencies = [
    "torch>=1.12.0,<2.0.0",
    "transformers>=4.20.0,<5.0.0",
    "scikit-learn>=1.0.0,<2.0.0",
    "numpy>=1.21.0,<2.0.0",
    "pandas>=1.3.0,<2.0.0",
    "mlflow>=2.0.0,<3.0.0",
    "fastapi>=0.85.0,<1.0.0",
    "uvicorn>=0.18.0,<1.0.0",
    "tqdm>=4.64.0,<5.0.0"
]

[project.optional-dependencies]
# Development dependencies with additional tools for enterprise-grade workflows
dev = [
    "black>=23.0.0,<24.0.0",
    "flake8>=6.0.0,<7.0.0",
    "isort>=5.10.0,<6.0.0",
    "pytest>=7.0.0,<8.0.0",
    "pre-commit>=3.0.0,<4.0.0",
    "mypy>=1.0.0,<2.0.0",
    "pytest-cov>=4.0.0,<5.0.0",
    "tox>=4.0.0,<5.0.0"
]

[tool.setuptools]
# Tell setuptools to look in the 'src' directory for packages
package-dir = { "" = "src" }

[tool.setuptools.packages.find]
# Discover all packages inside the 'src' folder
where = ["src"]

# Formatting: Black
[tool.black]
line-length = 88
target-version = ["py38", "py39", "py310"]
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.venv
  | build
  | dist
  | __pycache__
  | .mypy_cache
  | .pytest_cache
  | .tox
)/
'''

# Import sorting
[tool.isort]
profile = "black"
line_length = 88
known_third_party = ["torch", "transformers", "scikit-learn", "numpy", "pandas", "mlflow", "fastapi", "uvicorn", "tqdm"]
known_first_party = ["ml_apprentice_project"]
sections = ["FUTURE", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]

# Linting
[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    ".venv",
    "build",
    "dist",
    "__pycache__",
    ".mypy_cache",
    ".pytest_cache",
    ".tox"
]

# Type checking
[tool.mypy]
python_version = 3.8
ignore_missing_imports = true
strict = true

# Pre-commit hooks
[tool.pre-commit]
repos = [
    { repo = "https://github.com/pre-commit/pre-commit-hooks", rev = "v4.4.0", hooks = [{ id = "check-yaml" }, { id = "end-of-file-fixer" }, { id = "trailing-whitespace" }] },
    { repo = "https://github.com/psf/black", rev = "23.3.0", hooks = [{ id = "black" }] },
    { repo = "https://github.com/PyCQA/flake8", rev = "6.1.0", hooks = [{ id = "flake8" }] },
    { repo = "https://github.com/pre-commit/mirrors-isort", rev = "v5.12.0", hooks = [{ id = "isort" }] }
]